apiVersion: v1
kind: ConfigMap
metadata:
  name: acme-app-config
  namespace: acme-developer-hub
data:
  app-config.yaml: |
    auth:
      environment: production
      providers:
        oidc:
          development:
            clientId: openshift
            clientSecret: ${KEYCLOAK_OPENSHIFT_CLIENT_SECRET}
            metadataUrl: https://keycloak-rhsso.apps.sno.neat-monster.com/realms/openshift-sso/.well-known/openid-configuration
            prompt: auto
            sessionDuration: { hours: 24 }
            signIn:
              dangerouslyAllowSignInWithoutUserInCatalog: true
        microsoft:
          production:
            clientId: ${AZURE_CLIENT_ID}
            clientSecret: ${AZURE_CLIENT_SECRET}
            tenantId: ${AZURE_TENANT_ID}
          development:
            clientId: ${AZURE_CLIENT_ID}
            clientSecret: ${AZURE_CLIENT_SECRET}
            tenantId: ${AZURE_TENANT_ID}
        guest:
            dangerouslyAllowOutsideDevelopment: true
            userEntityRef: user:default/guest
    signInPage: microsoft
    permission:
      enabled: true
      rbac:
        admin:
          users:
            - name: user:default/sumiranchugh
            - name: user:default/sumiranchugh_outlook.com
            - name: group:default/team_a
    enabled:
      microsoftGraphOrg: true
      permission: true
      kubernetes: true
      techdocs: true   
    catalog:
      rules:
        - allow: [Component, API, Resource, System, Domain, Group, User, Location, Template]
      locations:
      - target: https://dev.azure.com/sumiranchugh/rhdh-ado-project/_git/red-hat-developer-hub-software-templates?path=/templates.yaml
        type: url
        rules:
        - allow: [Component, API, Resource, System, Domain, Group, User, Location, Template]
      providers:
        keycloakOrg:
          default:
            baseUrl: https://keycloak-rhsso.apps.sno.neat-monster.com
            realm: openshift-sso
            loginRealm: openshift-sso
            clientId: rhdh-sync
            clientSecret: ${KEYCLOAK_SYNC_CLIENT_SECRET}
            schedule:
              frequency: PT5M   # sync every 5 minutes
              timeout: PT2M
            userTransformer:
              name: "username"       
        microsoftGraphOrg:
          providerId:
            clientId: ${AZURE_CLIENT_ID}
            clientSecret: ${AZURE_CLIENT_SECRET}
            tenantId: ${AZURE_TENANT_ID}
            queryMode: advanced
            # Ingest GROUP entities: the root group and all nested groups
            group:
            # Root group + all nested groups (transitive)
              path: /groups/d430aa17-2f9d-4f4e-93d5-1350fe816c4c/transitiveMembers/microsoft.graph.group
              includeSubGroups: true   # harmless here; path already returns nested groups

            # Ingest USER entities: all users who are transitive members of that root group
            user:
              path: /groups/d430aa17-2f9d-4f4e-93d5-1350fe816c4c/transitiveMembers/microsoft.graph.user

            #userGroupMember:
              #search: '"displayName:team a" OR "displayName:teamb" OR "id:d430aa17-2f9d-4f4e-93d5-1350fe816c4c"'
              # filter: 'startswith(displayName,''team a'') or startswith(displayName,''teamb'')'
            schedule:
              frequency: PT1M
              timeout: PT50M
        azureDevOps:
          yourProviderId: # identifies your dataset / provider independent of config changes
            organization: sumiranchugh
            project: '*'
            repository: '*' # this will match all repos 
            path: /catalog-info.yaml
            schedule: # optional; same options as in TaskScheduleDefinition
              # supports cron, ISO duration, "human duration" as used in code
              frequency: { minutes: 3 }
              # supports ISO duration, "human duration" as used in code
              timeout: { minutes: 3 }

        # kubernetes:
        #   openshift:
        #     cluster: openshift
        #     processor:
        #       namespaceOverride: default
        #       defaultOwner: guests
        #     schedule:
        #       frequency:
        #         seconds: 30
        #       timeout:
        #         seconds: 5
    kubernetes:
      serviceLocatorMethod:
        type: 'multiTenant'
      clusterLocatorMethods:
        - type: 'config'
          clusters:
            - url:  https://kubernetes.default.svc
              name: openshift
              authProvider: 'serviceAccount'
              skipTLSVerify: false 
              skipMetricsLookup: true
              caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      customResources:
        - group: 'tekton.dev'
          apiVersion: 'v1beta1'
          plural: 'pipelineruns'
        - group: 'tekton.dev'
          apiVersion: 'v1beta1'
          plural: 'taskruns'
        - group: 'route.openshift.io'
          apiVersion: 'v1'
          plural: 'routes'        
    argocd:
      appLocatorMethods:
        - type: 'config'
          instances:
            - name: argoInstance1
              token: "${ARGOCD_AUTH_TOKEN}"
              url: http://openshift-gitops-server.openshift-gitops.svc.cluster.local      
    integrations:
      github:
      - host: github.com
        token: ${GITHUB_TOKEN}
      azure:
        - host: dev.azure.com
          credentials:
            # - personalAccessToken: \${AZURE_DEVOPS_PERSONAL_ACCESS_TOKEN}
            #   organizations:
            #     - \$AZURE_DEVOPS_ORG
            - clientId: ${AZURE_CLIENT_ID}
              clientSecret: ${AZURE_CLIENT_SECRET}
              tenantId: ${AZURE_TENANT_ID}
              # organizations:
              #   - \$AZURE_DEVOPS_ORG
    open-dora:
      # Point this at your OpenDORA backend URL
      apiBaseUrl: https://opendora-opendora.apps.sno.neat-monster.com/
    extensions:
      installation:
        enabled: true
        saveToSingleFile:
          file: /tmp/installed-extensions.json   
